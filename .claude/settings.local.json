{
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(java:*)",
      "Bash(npx react-native:*)",
      "Bash(npx @react-native-community/cli:*)",
      "Bash(lsb_release:*)",
      "Bash(echo $ANDROID_HOME)",
      "Bash(echo:*)",
      "Bash(ls:*)",
      "Bash(adb.exe devices:*)",
      "Bash(adb:*)",
      "Bash(./gradlew:*)",
      "Bash(sudo ln:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "mcp__openai-o3__openai_error_resolver",
      "Bash(curl:*)",
      "Bash(unzip:*)",
      "Bash(jar:*)",
      "WebFetch(domain:www.npmjs.com)",
      "WebFetch(domain:github.com)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(git restore:*)",
      "Bash(git push:*)",
      "Bash(git remote:*)",
      "Bash(gh:*)",
      "Bash(gh auth:*)",
      "Bash(git config:*)",
      "Bash(npx patch-package:*)",
      "Bash(powershell.exe:*)",
      "WebFetch(domain:registry.npmjs.org)",
      "WebFetch(domain:alphacephei.com)",
      "Bash(git fetch:*)",
      "Bash(git reset:*)",
      "Bash(git clean:*)",
      "Bash(npx mastra:*)",
      "mcp__mastra__mastraDocs",
      "Bash(git check-ignore:*)",
      "mcp__mastra__mastraExamples",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(npx tsx:*)",
      "Bash(chmod:*)",
      "Bash(./test-voice-api.sh:*)",
      "Bash(bash:*)",
      "Bash(python3:*)",
      "Bash(source:*)",
      "Bash(export OPENAI_API_KEY)",
      "Bash(grep:*)",
      "Bash(test:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(npx eslint:*)",
      "Bash(RUN_INTEGRATION_TESTS=true npm test -- src/__tests__/mastra/mcp/openai-o3-client.integration.test.ts)",
      "Bash([ -f .env.local ])",
      "Bash([ -f .env ])",
      "Bash(cat:*)",
      "WebFetch(domain:mastra.ai)",
      "Bash(rg:*)",
      "Bash(tree:*)",
      "Bash(npx tsc:*)",
      "Bash(sqlite3:*)",
      "Bash(tsx test-scripts/debug-calendar-db.ts:*)",
      "WebFetch(domain:developers.google.com)",
      "Bash(GOOGLE_OAUTH_CREDENTIALS=/mnt/c/Users/pirok/Desktop/repo/mcp/google-calendar-mcp/gcp-oauth.keys.json node /mnt/c/Users/pirok/Desktop/repo/mcp/google-calendar-mcp/build/index.js 2 >& 1)",
      "Bash(rsync:*)",
      "Bash($ANDROID_HOME/platform-tools/adb:*)",
      "Bash(git branch:*)",
      "Bash(export GH_TOKEN)",
      "Bash(./tests/bin/test_busctl.sh:*)",
      "Bash(dos2unix:*)",
      "Bash(sed:*)",
      "Bash(./tests/bin/test_busctl_functional.sh:*)",
      "Bash(./tests/bin/test_busctl_simple.sh:*)",
      "Bash(./tests/bin/test_busd_tmux.sh:*)",
      "Bash(./tests/frames/test_frame_simulation.sh:*)",
      "Bash(./tests/integration/test_real_scenario.sh:*)",
      "Bash(./tests/bin/test_basic_functionality.sh:*)",
      "Bash(claude code:*)",
      "Bash(python -m pytest tests/bin/test_busd_minimal.py -v)",
      "Bash(tmux list-sessions:*)",
      "Bash(./bin/busctl:*)",
      "Bash(tmux list-windows:*)",
      "Bash(timeout 5 python3:*)",
      "Bash(timeout:*)",
      "Bash(tmux list-panes:*)",
      "Bash(tmux send-keys:*)",
      "Bash(tmux capture-pane:*)",
      "Bash(tmux kill-session:*)",
      "Bash(tmux:*)",
      "Bash(python -m pytest tests/bin/test_tmux_layout.py -v)",
      "Bash(./tests/run_all_tests.sh)",
      "Bash(touch:*)",
      "Bash(python tests/e2e/test_target_repo.py)",
      "Bash(git worktree:*)",
      "Bash(python -m pytest tests/unit/test_busd_parallel_worktree.py -v)",
      "Bash(git init:*)",
      "Bash(git rm:*)",
      "Bash(python -m pytest tests/unit/test_busctl.py -xvs)",
      "Bash(python -m pytest tests/unit/test_busd_worktree.py -v)",
      "Bash(git pull:*)",
      "Bash(python -m pytest tests/unit/test_unit_frame.py -v)",
      "Bash(ROOT=/tmp/test_root python3 /mnt/c/Users/pirok/Desktop/repo/tools/ai-app-studio/bin/busctl.py spawn:*)",
      "Bash(python tests/unit/test_busd_simplified.py)",
      "Bash(python tests/unit/test_busctl_simplified.py)",
      "Bash(python -m pytest tests/unit/test_busd_children_status.py -v)",
      "Bash(python -m pytest tests/unit/test_busd_frame_selection.py -v)",
      "Bash(for test in tests/unit/test_busd*.py)",
      "Bash(do echo \"=== Running $test ===\")",
      "Bash(done)",
      "Bash(python -m pytest tests/unit/test_busctl_from_breakdown.py -v)"
    ],
    "deny": []
  }
}